{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells & Anti-patterns**: Identify long functions, complex conditionals, duplicated code, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for TypeScript/React/Next.js best practices including:\n   - Proper TypeScript typing and interfaces\n   - React component patterns and hooks usage\n   - Next.js App Router conventions\n   - Performance optimizations (memoization, lazy loading)\n   - Security considerations (especially for encryption/auth code)\n4. **Code Organization**: Suggest improvements to file structure, imports, and component architecture\n5. **Performance**: Identify potential performance bottlenecks and optimization opportunities\n6. **Readability**: Suggest improvements for variable naming, function clarity, and code documentation\n\nProvide specific, actionable suggestions while maintaining the existing functionality. Consider the project's tech stack (Next.js 15, React 19, TypeScript, Tailwind, Clerk auth, Firebase, client-side encryption) and security-first architecture."
  }
}